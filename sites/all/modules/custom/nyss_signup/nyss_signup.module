<?php

/**
 *  @file
 *  NYSS Signup
 *
 *  Integrate with Bronto and mCommons from mailing list and text message signups.
 */

/**
 *  Implement hook_menu().
 */
function nyss_signup_menu() {
  $items = array();
  $items['admin/settings/nyss_signup'] = array(
    'title' => 'NYSS Signup Settings',
    'description' => 'Set up Bronto and mCommons settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nyss_signup_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/nyss_signup.admin.inc',
  );
  $items['admin/content/nyss_signup_send_mail'] = array(
    'title' => 'Send Bronto Mailing',
    'description' => 'Send Bronto mailing to one of the mailing lists.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('nyss_signup_send_mail'),
    'access arguments' => array('send nyss mailing list email'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/nyss_signup.admin.inc',
  );
  $items['nyss_signup/create_initial_lists'] = array(
    'title' => 'Create initial bronto lists',
    'page callback' => 'nyss_signup_create_initial_lists',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/nyss_signup.admin.inc',
  );
  $items['nyss_signup/confirm'] = array(
    'title' => 'Sign Up Confirmation',
    'page callback' => 'nyss_signup_confirm_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/nyss_signup.confirm.inc',
  );
  $items['nyss_signup/unsubscribe'] = array(
    'title' => 'Unsubscribe from Mailing Lists',
    'page callback' => 'nyss_signup_unsubscribe_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/nyss_signup.unsubscribe.inc',
  );
  return $items;
}

/**
 *  Implements hook_perm().
 */
function nyss_signup_perm() {
  return array('send nyss mailing list email', 'send to any mailing list');
}

/**
 *  Implements hook_theme().
 */
function nyss_signup_theme($existing, $type, $theme, $path) {
  $items = array();
  $items['nyss_signup_send_mail_preview'] = array(
      'arguments' => array('fields' => NULL),
      'file' => "themes/nyss_signup.theme.inc",
  );
  $items['nyss_signup_block'] = array(
      'arguments' => array('fields' => NULL),
      'file' => "themes/nyss_signup.theme.inc",
  );
  return $items;
}

/**
 *  Defines the FormAPI array for mailing list signup.
 *
 *  @return
 *    FormAPI form array.
 */
function nyss_signup_block_form() {
  $form['email'] = array(
    '#type' => 'textfield',
    '#default_value' => t('Email'),
    '#size' => 15,
    '#attributes' => array(
      'onblur' => "if (this.value == '') {this.value = 'Email';}", 
      'onfocus' => "if (this.value == 'Email') {this.value = '';}",
    ),
  );
  $form['zip'] = array(
    '#type' => 'textfield',
    '#default_value' => t('Zip'),
    '#size' => 15,
    '#attributes' => array(
      'onblur' => "if (this.value == '') {this.value = 'Zip';}", 
      'onfocus' => "if (this.value == 'Zip') {this.value = '';}",
    ),
  );
  $form['mobile'] = array(
    '#type' => 'textfield',
    '#default_value' => t('Mobile'),
    '#size' => 15,
    '#attributes' => array(
      'onblur' => "if (this.value == '') {this.value = 'Mobile';}", 
      'onfocus' => "if (this.value == 'Mobile') {this.value = '';}",
    ),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#attributes' => array('id' => "edit-submit-signup"),
  );
  return $form;
}

/**
 * Implementation of hook_validate().
 */
function nyss_signup_block_form_validate(&$form, &$form_state) {
  if (!$form_state['values']['email'] || !valid_email_address($form_state['values']['email'])) {
    form_set_error('email', t('You have not entered a valid email address.'));  
  }
}

/**
 * Implementation of hook_submit().
 */
function nyss_signup_block_form_submit(&$form, &$form_state) {
  require_once(drupal_get_path('module', 'nyss_signup') . '/includes/bronto_api.inc');
  
  // Get the list that the user is subscribing to, depending on context
  $list = variable_get('bronto_general_list', '');
  $senator = nyss_senator();
  if ($senator->vid) {
    $result = db_result(db_query("SELECT field_mailing_list_value FROM {content_field_mailing_list} WHERE vid = %d", $senator->vid));
    if ($result) {
      $list = $result;
    }
  }
  $committee = nyss_senator_committee();
  if ($committee->nid) {
    $result = db_result(db_query("SELECT field_mailing_list_value FROM {content_field_mailing_list} WHERE vid = %d", $committee->vid));
    if ($result) {
      $list = $result;
    }
  }
  /*
  $bronto = new bronto_api(variable_get('bronto_login', ''), variable_get('bronto_sitename', ''), variable_get('bronto_password', ''));

  // Add the email to the mailing list
  $response = $bronto->add_email_to_list($form_state['values']['email'], $list);
  if (!$response) {
    drupal_set_message('Error: ' . $bronto->get_error_code() . "<br/>" . $bronto->get_error_message(), 'error');
    return;
  }

  // Update the fields
  $fields = array();
  */
  if ($form_state['values']['mobile'] != 'Mobile') {
    $fields['mobile'] = $form_state['values']['mobile'];
    $_SESSION['bronto_mobile'] = $form_state['values']['mobile'];
  }
  if ($form_state['values']['zip'] != 'Zip') {
    $fields['zip'] = $form_state['values']['zip'];
    $_SESSION['bronto_zip'] = $form_state['values']['zip'];
  } 
  /*if (count($fields)) {
    $response = $bronto->update_fields($form_state['values']['email'], $fields);
    if (!$response) {
      drupal_set_message('Error: ' . $bronto->get_error_code() . "<br/>" . $bronto->get_error_message(), 'error');
      return;
    }
  }
  
  // Send confirmation email
  $body = t(variable_get('bronto_subscription_confirm_body', nyss_signup_confirm_body_default()), array('!site' => variable_get('site_name', ''), '!lists' => $list, '!unsubscribe_link' => url('nyss_signup/unsubscribe/' . $form_state['values']['email'], array('absolute' => TRUE))));
  
  $response = $bronto->send_message(
    $user->name,
    variable_get('site_mail', ini_get('sendmail_from')),
    $form_state['values']['email'],
    t('Confirmation of subscription to !list mailing list', array('!list' => $list)),
    preg_replace('/\n/', '<br />', $body),
    l(t('View'), 'nyss_signup/unsubscribe/' . $form_state['values']['email'], array('absolute' => TRUE)) . ' your subscriptions.',
    'html',
    'contact'
  );
  */
  $_SESSION['bronto_email'] = $form_state['values']['email'];
  $_SESSION['bronto_list'] = $list;
  $_SESSION['bronto_redirect'] = $_GET['q'];
  $form_state['redirect'] = 'nyss_signup/confirm';
}

/*
 * The default body text of the subscribe confirmation email.
 */
function nyss_signup_confirm_body_default() {
  return "You have successfully subscribed to the following !site mailing lists:\n\n!lists\n\nIf this has been in error, you can unsubscribe here:\n\n!unsubscribe_link\n\nThanks,\nThe !site Team";
}

/*
 * The default body text of the subscribe confirmation email.
 */
function nyss_signup_unsubscribe_body_default() {
  return "You have successfully unsubscribed from the following !site mailing lists:\n\n!lists\n\nIf this has been in error, you can visit !site_link to resubscribe to site updates.\n\nThanks,\nThe !site Team";
}
